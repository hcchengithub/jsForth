(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports=function(n,p){function o(){return C[C.length-1]}function u(){return C[C.length-2]}function t(n,p,o,u,t){if(l[P++]=n,l[P++]=o,l[P++]=p,void 0!==t&&(l[P++]=t),"function"==typeof u)l[P++]=u;else{var r=u.split(" ");r.forEach(function(n){l[P++]=isNaN(n)?N[n]:parseInt(n)})}}function r(n,p,o,u){var r=P;N[p]=P+3,H[p]=u,t(L,n,o,u),L=r}function i(n,p,o,u){var r=P;N[p]=P+3,t(L,n,o,u,v),L=r}function f(n,p,o,u){var r=P;N[p]=P+3;var i=P+4,f=function(){return l[i]=u,function(){C.push(i),c()}}();return t(L,n,o,f),P++,L=r,i}function T(){var n="";do{var p=s();if(null===p)return null;var o=String.fromCharCode(p);W!=F?"\\"!==o[0]?(n+=o,n=n.trim()):W=F:10===p&&(W=d)}while(""===n||32!==p&&10!==p&&13!==p);return C.push(n.trim()),n="",!0}function E(){var n=l[X],p=C.pop();do{var o=l[n+2];if(!(l[n+1]&A||o!==p))break;n=l[n]}while(0!==n);C.push(n)}function a(n){var p=l[M];l[p++]=n,l[M]=p}function c(){K+=1,g=l[K]}function h(n){g=n}function v(){e.push(K),K=g,c()}function s(){return 0===Q.length?(G=Z,null):Q.shift()}for(var R=this,I=n,D=p,O=2,A=1,C=[],e=[],N={},l=[],S=0;2048>S;S++)l.push(null);var L=0,P=0,H={};r("EXIT","EXIT",0,function(){K=e.pop(),c()});var M=f("HERE","HERE",0,0),X=f("LATEST","LATEST",0,0),B=f("STATE","STATE",0,0),U=f("BASE","BASE",0,10);r("DUP","DUP",0,function(){C.push(o()),c()}),r("DROP","DROP",0,function(){C.pop(),c()}),r("SWAP","SWAP",0,function(){var n=C.pop(),p=C.pop();C.push(n),C.push(p),c()}),r("OVER","OVER",0,function(){C.push(u()),c()}),r("ROT","ROT",0,function(){var n=C.pop(),p=C.pop(),o=C.pop();C.push(p),C.push(n),C.push(o),c()}),r("2DROP","TWODROP",0,function(){C.pop(),C.pop(),c()}),r("2DUP","TWODUP",0,function(){var n=o(),p=u();C.push(p),C.push(n),c()}),r("2SWAP","TWOSWAP",0,function(){var n=C.pop(),p=C.pop(),o=C.pop(),u=C.pop();C.push(o),C.push(u),C.push(n),C.push(p),c()}),r("?DUP","ZDUP",0,function(){var n=o();0!==n&&C.push(n),c()}),r("1+","INCR",0,function(){C[C.length-1]++,c()}),r("1-","DECR",0,function(){C[C.length-1]--,c()}),r("+","ADD",0,function(){var n=C.pop(),p=C.pop();C.push(n+p),c()}),r("-","SUB",0,function(){var n=C.pop(),p=C.pop();C.push(p-n),c()}),r("*","MUL",0,function(){var n=C.pop(),p=C.pop();C.push(p*n),c()}),r("/MOD","MODDIV",0,function(){var n=C.pop(),p=C.pop();C.push(p%n),C.push(Math.floor(p/n)),c()}),r("/","DIV",0,function(){var n=C.pop(),p=C.pop();C.push(Math.floor(p/n)),c()}),r("=","EQ",0,function(){var n=C.pop(),p=C.pop();C.push(n===p?1:0),c()}),r("<>","NEQ",0,function(){var n=C.pop(),p=C.pop();C.push(n!==p?1:0),c()}),r("<","LT",0,function(){var n=C.pop(),p=C.pop();C.push(n>p?1:0),c()}),r(">","GT",0,function(){var n=C.pop(),p=C.pop();C.push(p>n?1:0),c()}),r("<=","LTE",0,function(){var n=C.pop(),p=C.pop();C.push(n>=p?1:0),c()}),r(">=","GTE",0,function(){var n=C.pop(),p=C.pop();C.push(p>=n?1:0),c()}),r("0=","ZEQ",0,function(){var n=C.pop();C.push(0===n?1:0),c()}),r("0<>","ZNEQ",0,function(){var n=C.pop();C.push(0!==n?1:0),c()}),r("0<","ZLT",0,function(){var n=C.pop();C.push(0>n?1:0),c()}),r("0>","ZGT",0,function(){var n=C.pop();C.push(n>0?1:0),c()}),r("0<=","ZLTE",0,function(){var n=C.pop();C.push(0>=n?1:0),c()}),r("0>=","ZGTE",0,function(){var n=C.pop();C.push(n>=0?1:0),c()}),r("AND","AND",0,function(){var n=C.pop(),p=C.pop();C.push(n&p),c()}),r("OR","OR",0,function(){var n=C.pop(),p=C.pop();C.push(n|p),c()}),r("XOR","XOR",0,function(){var n=C.pop(),p=C.pop();C.push(n^p),c()}),r("INVERT","INVERT",0,function(){var n=C.pop();C.push(!n),c()}),r("BRANCH","BRANCH",0,function(){var n=l[++K];K+=parseInt(n)-1,c()}),r("0BRANCH","ZBRANCH",0,function(){var n=l[++K],p=C.pop();0===p&&(K+=parseInt(n)-1),c()}),r("!","STORE",0,function(){var n=C.pop(),p=C.pop();l[n]=p,c()}),r("@","FETCH",0,function(){var n=C.pop();C.push(l[n]),c()}),r("DEPTH","DEPTH",0,function(){C.push(C.length-1),c()}),r("DSP@","STACK0",0,function(){var n=C.pop();C.push(C[n]),c()}),r(">R","TRSK",0,function(){e.push(C.pop()),c()}),r("R>","FRSK",0,function(){C.push(e.pop()),c()}),r("RDROP","RDROP",0,function(){e.pop(),c()}),r("EMIT","EMIT",0,function(){var n=C.pop();D(n),c()}),r("TELL","TELL",0,function(){var n=C.pop();I(n),c()}),r("KEY","KEY",0,function(){var n=s();null!==n&&(C.push(n),c())});var d=0,F=1,W=d;r("WORD","WORD",0,function(){null!==T()&&c()}),r("NUMBER","NUMBER",0,function(){var n=l[U],p=C.pop(),o=parseInt(p,n);C.push(o),c()}),r("FIND","FIND",0,function(){E(),c()}),r("CREATE","CREATE",0,function(){var n=l[X],p=l[M],o=C.pop();l[X]=p,l[p++]=n,l[p++]=0,l[p++]=o,l[M]=p,c()}),r(",","COMMA",0,function(){var n=C.pop(),p=l[M];l[M]++,l[p]=n,c()}),r("'","TICK",0,function(){var n=l[++K];C.push(n),c()}),r("LIT","LIT",0,function(){K++;var n=l[K];C.push(parseInt(n)),c()}),r("LITSTRING","LITSTRING",0,function(){}),r("IMMEDIATE","IMMEDIATE",O,function(){var n=l[X];l[n+1]^=O,c()}),r("HIDDEN","HIDDEN",0,function(){var n=C.pop();l[n+1]^=A,c()}),r("INTERPRET","INTERPRET",0,function(){if(null!==T()){var n=o();E();var p=l[B],u=C.pop();if(0!==u){var t=l[u+1]&O,r=u+3;if(!p||t)return void h(r);a(r)}else{var i=l[U],f=parseInt(n,i);if(isNaN(f))return I("Parse Error: "+n+" not found!\n"),void c();p?(a(N.LIT),a(f)):C.push(f)}c()}}),r("CHAR","CHAR",0,function(){if(null!==T()){var n=C.pop(),p=n.charCodeAt(0);C.push(p),c()}}),r("EXECUTE","EXECUTE",0,function(){var n=C.pop();h(n)}),r("DOCOL!","DOCOLSTORE",0,function(){var n=l[M];l[M]++,l[n]=v,c()}),i("-ROT","NROT",0,"ROT ROT EXIT"),i(">CFA","TCFA",0,"LIT 3 ADD EXIT"),i(">DFA","TDFA",0,"LIT 4 ADD EXIT"),i("[","LSBRACKET",O,"LIT 0 STATE STORE EXIT"),i("]","RSBRACKET",0,"LIT 1 STATE STORE EXIT"),i(":","COLON",0,"WORD CREATE DOCOLSTORE LATEST FETCH HIDDEN RSBRACKET EXIT"),i(";","SEMICOLON",O,"LIT EXIT COMMA LATEST FETCH HIDDEN LSBRACKET EXIT"),i("HIDE","HIDE",0,"WORD FIND HIDDEN EXIT"),i("CORE_VERSION","CORE_VERSION",0,"LIT 1 EXIT"),i("QUIT","QUIT",0,"INTERPRET BRANCH -2"),l[M]=P,l[X]=L,P=void 0,L=void 0;var K=null,g=null,V=0,Z=1,Q=[],G=V;R.pushIntoInputBuffer=function(n){for(var p=n.length,o=0;p>o;o++)Q.push(n.charCodeAt(o));G=V,R.run()},R.run=function(){for(;G==V;){var n=l[g];n()}},g=N.QUIT,R.run()};
},{}],2:[function(require,module,exports){
$(document).ready(function(){var n=require("../../lib/jsForth.js"),E="\\ vim: set syntax=forth:\n\\ This file contain the kernel of jsForth, it is everthing that was missing into\n\\ the inner core\n\n: NL 13 ;\n: BL 32 ;\n: CR NL EMIT ;\n: SPACE BL EMIT ;\n\n: TRUE 1 ;\n: FALSE 0 ;\n: NOT 0= ;\n\n: NEGATE 0 SWAP - ;\n\n: LITERAL IMMEDIATE\n    ' LIT ,\n    ,\n    ;\n\n: ':' [ CHAR : ] LITERAL ;\n: '(' [ CHAR ( ] LITERAL ;\n: ')' [ CHAR ) ] LITERAL ;\n: '\"' [ CHAR \" ] LITERAL ; \\ \"\n: 'A' [ CHAR A ] LITERAL ;\n: '0' [ CHAR 0 ] LITERAL ;\n: '-' [ CHAR - ] LITERAL ;\n: '.' [ CHAR . ] LITERAL ;\n\n: [COMPILE] IMMEDIATE\n    WORD\n    FIND\n    >CFA\n    ,\n;\n\n: RECURSE IMMEDIATE\n    LATEST @\n    >CFA\n    ,\n;\n\n\\ condition IF true ELSE false THEN\n\\ condition IF true THEN\n\n: IF IMMEDIATE\n    ' 0BRANCH ,\n    HERE @\n    0 ,\n;\n\n: THEN IMMEDIATE\n    DUP\n    HERE @ SWAP -\n    SWAP !\n;\n\n: ELSE IMMEDIATE\n    ' BRANCH ,\n    HERE @\n    0 ,\n    SWAP\n    DUP\n    HERE @ SWAP -\n    SWAP !\n;\n\n\\ BEGIN loop-part condition UNTIL\n\\ BEGIN loop-part AGAIN\n\n: BEGIN IMMEDIATE\n    HERE @\n;\n\n: UNTIL IMMEDIATE\n    ' 0BRANCH ,\n    HERE @ -\n    ,\n;\n\n: AGAIN IMMEDIATE\n    ' BRANCH ,\n    HERE @ -\n    ,\n;\n\n\\ BEGIN condition WHILE loop-part REPEAT\n: WHILE IMMEDIATE\n    ' 0BRANCH ,\n    HERE @\n    0 ,\n;\n\n: REPEAT IMMEDIATE\n    ' BRANCH ,\n    SWAP\n    HERE @ - ,\n    DUP\n    HERE @ SWAP -\n    SWAP !\n;\n\n: UNLESS IMMEDIATE\n    ' NOT ,\n    [COMPILE] IF\n;\n\n: ( IMMEDIATE\n    1\n    BEGIN\n        KEY\n        \\ DUP EMIT We don't need to print them anymore\n        DUP '(' =\n        IF\n              DROP\n              1+\n        ELSE\n            ')' =\n            IF\n                1 -\n            THEN\n        THEN\n    DUP 0= UNTIL\n    DROP\n;\n\n: NIP ( x y -- y ) SWAP DROP ;\n: TUCK ( x y -- y x y ) SWAP OVER ;\n: PICK ( x_u ... x_1 x_0 u -- x_u ... x_1 x_0 x_u )\n    \\ TODO\n;\n\n: SPACES ( n -- )\n    BEGIN\n        DUP 0>\n    WHILE\n        SPACE\n        1-\n    REPEAT\n    DROP\n;\n\n: DECIMAL ( -- ) 10 BASE ! ;\n: HEX ( -- ) 16 BASE ! ;\n\n: U. ( u -- )\n    BASE @ /MOD\n    ?DUP IF\n        RECURSE\n    THEN\n\n    DUP 10 <\n    IF\n        '0'\n    ELSE\n        10 -\n        'A'\n    THEN\n    +\n    EMIT\n;\n\n: UWIDTH ( u -- width )\n    BASE @ /\n    ?DUP IF\n        RECURSE 1+\n    ELSE\n        1\n    THEN\n;\n\n: U.R ( u width -- )\n    SWAP\n    DUP\n    UWIDTH\n    ROT\n    SWAP -\n    SPACES\n    U.\n;\n\n: .R ( u width -- )\n    SWAP\n    DUP 0 <\n    IF\n        NEGATE\n        1\n        SWAP\n        ROT\n        1-\n    ELSE\n        0\n        SWAP\n        ROT\n    THEN\n    SWAP\n    DUP\n    UWIDTH\n    ROT\n    SWAP -\n    SPACES\n    SWAP\n    IF\n        '-' EMIT\n    THEN\n    U.\n;\n\n: . 0 .R SPACE ;\n\n: LTNUMBERGT ( u -- ) \\ Print <u>\n    [ CHAR < ] LITERAL EMIT\n    U.\n    [ CHAR > ] LITERAL EMIT\n    SPACE\n;\n\n : .S ( -- )\n     DEPTH DUP ( d d )\n     1+ LTNUMBERGT ( d d+1 -- d )\n     0 ( d cnt )\n     BEGIN\n         2DUP   ( d cnt d cnt )\n         >=     ( d cnt d>=cnt )\n     WHILE\n         DUP    ( d cnt -- d cnt cnt )\n         DSP@ . ( display number )\n         1+     ( d cnt - d cnt+1)\n     REPEAT\n     2DROP      ( d cnt -- )\n     CR\n ;\n\n: U. U. SPACE ;\n\n: .s .S ;\n\n: ? @ . ;\n\n: KERNELF_VERSION 2 ;\n",A=null,I="",T=function(){R.echo(I),I=""},R=$("#term").terminal(function(n){A.pushIntoInputBuffer(n+"\n"),""!==I&&T()},{greetings:"starting jsForth...",name:"jsForth",height:500,prompt:"forth> "}),t=function(n){13===n?T():I+=String.fromCharCode(n)},P=function(n){R.echo(n)};A=new n(P,t),R.echo("Loading forth kernel..."),A.pushIntoInputBuffer(E)});
},{"../../lib/jsForth.js":1}]},{},[2]);
